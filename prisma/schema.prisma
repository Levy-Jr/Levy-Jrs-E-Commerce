// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id            String    @id @default(cuid())
  fullName      String
  phoneNumber   String
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String
  role          UserRole  @default(USER)
  cpf           String
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  orders        Order[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  products  Product[]
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Product {
  id         String   @id @default(uuid())
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  name       String
  desc       String
  price      Decimal
  isFeatured Boolean  @default(false)
  isArchived Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  images     Image[]
  orders     Order[]
}

model Image {
  id           String  @id @default(uuid())
  productId    String
  product      Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  imagePath    String
  defaultImage Boolean @default(false)
}

model Order {
  id        String   @id @default(uuid())
  userId    String
  productId String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
  pricePaid Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
